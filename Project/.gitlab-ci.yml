# Define stages for your pipeline
stages:
  - install-dependencies
  - build
  - test
  - dockerize

variables:
  FRONTEND_IMAGE: registry.gitlab.com/<your-namespace>/<project-name>/frontend
  BACKEND_IMAGE: registry.gitlab.com/<your-namespace>/<project-name>/backend
  DOCKER_DRIVER: overlay2

frontend-job:
  stage: install-dependencies
  image: node:14-alpine
  script:
    - echo "Installing dependencies for frontend..."
    - cd frontend
    - npm install
    - echo "Building React App"
    - npm run build
  artifacts:
    paths:
      - frontend/build/
  only:
    - main

backend-job:
  stage: test
  image: python:3.9-slim
  script:
    - echo "Installing Dependencies"
    - cd backend
    - pip install -r requirements.txt
    - echo "Running Tests"
    - pytest
  only:
    - main

docker-build:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Building Images"
    - docker build -t $FRONTEND_IMAGE:latest ./frontend
    - docker build -t $BACKEND_IMAGE:latest ./backend
    - if [ "$CI_COMMIT_BRANCH" == "main" ]; then
        echo "Pushing Images";
        echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY;
        docker push $FRONTEND_IMAGE:latest;
        docker push $BACKEND_IMAGE:latest;
      fi
  only:
    - main